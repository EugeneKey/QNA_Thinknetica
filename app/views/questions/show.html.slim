- cache_unless current_user.try(:admin), [@question, 'title'] do
  h1 = @question.title

.subscription
  .subscription-errors
  - if can?(:create, Subscription.new(question: @question))
    .subscribe
      = link_to 'Subscribe', question_subscriptions_path(@question),
                class: "link-subscribe", remote: true, method: :post
  - if @subscription && can?(:destroy, @subscription)
    .subscribe
      = link_to 'Unscribe', subscription_path(@subscription),
                class: "link-subscribe", remote: true, method: :delete

- cache_unless current_user.try(:admin), [@question, 'text'] do
  p= @question.text
.question-options
  - if can?(:update, @question)
    nav
      ul
        li= link_to 'Edit question', edit_question_path
        - if can?(:destroy, @question)
          li= link_to 'Delete question', @question, method: :delete
  - cache_unless current_user.try(:admin), [@question, 'vote', user_signed_in?] do
    = render 'votes/vote', votable: @question, type: "question"
  - cache_unless current_user.try(:admin), [@question, 'attach'] do
    = render 'attachments/attachments', model: @question
- cache_unless current_user.try(:admin), [@question, 'comments', user_signed_in?] do
  .question-comments
    = render 'comments/comments', commentable: @question

- cache_unless current_user.try(:admin), [@question, 'answer', user_signed_in?] do
  h2 Answers
  .answers data={question_id: "#{@question.id}"}
    .list-answers
      = render @question.answers

- if can?(:create, Answer)
  div class="center hero-unit new-answer-form"
    = form_for [@question, @answer], remote: true do |f|
      = f.label :text, 'Your answer'
      .answer-error
      = f.text_area :text, class: "form-control", id: 'answer_create'
      = render 'attachments/attachments_fields', f: f, build_attach: @answer.attachments.build
      = f.submit 'Create Answer', class: "btn btn-primary btn-lg btn-block"

= subscribe_to "/questions/#{@question.id}/answers"
= subscribe_to "/questions/#{@question.id}/comments"